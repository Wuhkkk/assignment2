spec SmartParkingSystem

// ================ 类型定义 ================
type NumCars = Int(0..10); // 车位总数最多为10

// ================ 环境变量（env）================
env boolean carAtEntrance;     // 入口有车等待
env boolean carAtExit;         // 出口有车等待
env NumCars availableSpots;    // 当前可用停车位数量

// ================ 系统变量（sys）================
sys boolean openEntranceGate;  // 控制入口闸门开闭
sys boolean openExitGate;      // 控制出口闸门开闭
sys NumCars assignedSpot;      // 分配给新来车辆的车位编号（0~9）

// ================ 假设 (Assumptions) =====================

// 初始状态假设
asm ini !openEntranceGate;        // 初始入口闸门关闭
asm ini !openExitGate;            // 初始出口闸门关闭

// 安全性假设
asm alw carAtExit -> next(carAtExit); // 如果出口有车，下一时刻仍可能在
asm alw availableSpots >= 0 & availableSpots <= 10; // 可用车位应在合法范围内

// 公平性假设
asm alwEv !carAtEntrance;         // 总会有一段时间没有车在入口
asm alwEv !carAtExit;             // 总会有一段时间没有车在出口

// ================ 保证 (Guarantees) =====================

// 初始状态保证
gar ini assignedSpot = 0;          // 初始未分配车位，默认为0

// 安全性保证
gar alw openEntranceGate -> availableSpots > 0; // 只有还有空位才允许开门
gar alw openEntranceGate -> carAtEntrance;      // 入口闸门开表示确实有车在等
gar alw openExitGate -> carAtExit;              // 出口闸门开表示确实有车要出
gar alw openEntranceGate -> next(openEntranceGate = false); // 闸门只开一拍即关

// 公平性保证
gar alwEv (carAtEntrance & availableSpots > 0) -> openEntranceGate;
gar alwEv (carAtExit) -> openExitGate;

// ================ 定义（可选）=====================

define
  gateOpen := openEntranceGate | openExitGate;